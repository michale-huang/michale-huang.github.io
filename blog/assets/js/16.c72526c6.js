(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{361:function(s,t,a){"use strict";a.r(t);var n=a(43),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"开发模式下动态传入api地址进行构建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开发模式下动态传入api地址进行构建"}},[s._v("#")]),s._v(" 开发模式下动态传入API地址进行构建")]),s._v(" "),a("h2",{attrs:{id:"背景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#背景"}},[s._v("#")]),s._v(" 背景")]),s._v(" "),a("p",[s._v("开发中常常遇到一个场景，需要与不同的后端er对接调试接口，而不同后端er开的接口地址通常又是不同的，如果每次都在代码里直接去改接口的baseURL显然并不那么友好。我们希望的是这种因调试而产生的修改并不直接体现在代码里，如果能在编译之前通过一个参数将baseURL传进去，再进行编译调试这样问题就可以得到解决。")]),s._v(" "),a("p",[s._v("这里以webpack-dev-server为例，按刚才的思路，只需要在起本地的dev-server时传入baseURL即可")]),s._v(" "),a("h2",{attrs:{id:"技能点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#技能点"}},[s._v("#")]),s._v(" 技能点")]),s._v(" "),a("p",[s._v("要实现上述想法，我们需要了解三个技能点：")]),s._v(" "),a("ol",[a("li",[a("p",[a("strong",[s._v("传入需要的参数并启动server")])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("node.js中process模块的"),a("code",[s._v("process.argv")]),s._v("属性")])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("webpack的"),a("code",[s._v("DefinePlugin")]),s._v("插件")])])])]),s._v(" "),a("h2",{attrs:{id:"传参"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#传参"}},[s._v("#")]),s._v(" 传参")]),s._v(" "),a("p",[s._v("我们需要在起dev-server时传入参数，先看下项目中"),a("code",[s._v("package.json")]),s._v("中起dev-server的script命令：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"scripts"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"dev"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"webpack-dev-server --inline --progress --config build/webpack.dev.conf.js"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("加入一个参数"),a("code",[s._v("--api")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('"scripts": {\n    "dev": "webpack-dev-server --inline --progress --config build/webpack.dev.conf.js --api"\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("接下来在起dev-server时则运行：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('npm run dev "http://test.com:9995"\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("到此参数已经传入，那么我们要怎么获得呢？接下来第二点")]),s._v(" "),a("h2",{attrs:{id:"process-argv"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#process-argv"}},[s._v("#")]),s._v(" process.argv")]),s._v(" "),a("p",[s._v("process是node中的一个模块，"),a("code",[s._v("process.argv")]),s._v("属性会返回一个数组，这个数组包含了启动Node.js进程时的命令行参数。第一个元素为"),a("code",[s._v("process.execPath")]),s._v("，第二个元素为当前执行的JavaScript文件路径, 剩余元素则为其他命令行参数。")]),s._v(" "),a("p",[s._v("通过上述属性，我们就可以拿到传入的参数，接下来是如何使用参数了")]),s._v(" "),a("h2",{attrs:{id:"defineplugin插件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#defineplugin插件"}},[s._v("#")]),s._v(" DefinePlugin插件")]),s._v(" "),a("blockquote",[a("p",[s._v("DefinePlugin 允许创建一个在编译时可以配置的全局常量。这可能会对开发模式和发布模式的构建允许不同的行为非常有用。例如如果在开发构建中，而不在发布构建中执行日志记录，则可以使用全局常量来决定是否记录日志。这就是 DefinePlugin 的用处.")])]),s._v(" "),a("p",[s._v("拿到API地址后，可以通过DefinePlugin插件来创建一个全局常量，如：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getApiBase")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" idx "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("argv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("indexOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'--api'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),s._v("idx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("argv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("idx "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("webpack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("DefinePlugin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("API_BASE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("JSON")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("stringify")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getApiBase")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("这里需要注意的是，API_BASE的值通过JSON.stringify处理过，这是因为这个DefinePlugin插件是直接执行文本替换，因此给定的值必须包含字符串本身内的实际引号, 如果不加字符串引号可能就被当成变量来处理了。通常有两种方式来达到这个效果，使用 '\"production\"', 或者使用 JSON.stringify('production')")]),s._v(" "),a("p",[s._v("接下来就是最后一步了，当在开发模式下，将API_BASE赋给请求的baseURL:")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" devBaseUrl "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("env"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NODE_ENV")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'production'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("API_BASE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("API_BASE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'xxx'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//此处xxx可为线上地址")]),s._v("\n\naxios"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("default"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("baseURL "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" devBaseUrl\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("到此，当每次需要用不同的接口地址进行调试时，直接执行"),a("code",[s._v('make dev URL="xxx"')]),s._v("即可，不需要再做代码进行任何修改。")])])}),[],!1,null,null,null);t.default=e.exports}}]);